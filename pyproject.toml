[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "ghostx"
version = "1.0.0"
description = "Professional Email Management System"
authors = ["Ghostx Team <admin@ghost.sbs>"]
readme = "README.md"
packages = [{include = "src"}]
license = "MIT"

[tool.poetry.dependencies]
python = ">=3.8,<4.0"
flask = "*"
flask-login = "*"
flask-sqlalchemy = "*"
flask-wtf = "*"
flask-session = "*"
flask-limiter = "*"
flask-migrate = "*"
sqlalchemy = "*"
werkzeug = "*"
jinja2 = "*"
python-dotenv = "*"
waitress = "*"
beautifulsoup4 = "*"
gunicorn = "*"
email-validator = "*"
cryptography = "*"
requests = "*"
python-dateutil = "*"
pytz = "*"
bcrypt = "*"
itsdangerous = "*"

[tool.poetry.group.dev.dependencies]
pytest = "*"
black = "*"
flake8 = "*"
mypy = "*"
coverage = "*"
pytest-cov = "*"
bandit = "*"
safety = "*"
isort = "*"

[tool.poetry.scripts]
ghostx = "setup:run_server"

[tool.black]
line-length = 127
target-version = ['py38']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 127
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --cov=src --cov-report=xml"
testpaths = ["tests"]

[tool.coverage.run]
source = ["src"]
omit = ["tests/*", "setup.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101"] 